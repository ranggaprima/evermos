{"ast":null,"code":"import{combineReducers}from'redux';import axios from'axios';var GET_IMAGE_LOADING='GET_IMAGE_LOADING';var GET_IMAGE_SUCCESS='GET_IMAGE_SUCCESS';var GET_IMAGE_ERROR='GET_IMAGE_ERROR';export function getImageLoading(bool){return{type:GET_IMAGE_LOADING,loading:bool};}export function getImageSuccess(imageData){return{type:GET_IMAGE_SUCCESS,imageData:imageData};}export function getImageError(bool){return{type:GET_IMAGE_ERROR,error:bool};}export function getImage(url){var api_path=\"/api/getImage\";return function(dispatch){dispatch(getImageLoading(true));axios.post(api_path).then(function(res){return res.data;}).then(function(data){dispatch(getImageSuccess(data.items));dispatch(getImageLoading(false));}).catch(function(){return dispatch(getImageError(true));});};}export function error(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_IMAGE_ERROR:return action.error;default:return state;}}export function loading(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_IMAGE_LOADING:return action.loading;default:return state;}}export function imageData(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;console.log(state,action);switch(action.type){case GET_IMAGE_SUCCESS:return action.imageData;default:return state;}}export default combineReducers({loading:loading,imageData:imageData,error:error});","map":{"version":3,"sources":["/home/rangga/Downloads/aia/frontend/src/components/store/reducers.js"],"names":["combineReducers","axios","GET_IMAGE_LOADING","GET_IMAGE_SUCCESS","GET_IMAGE_ERROR","getImageLoading","bool","type","loading","getImageSuccess","imageData","getImageError","error","getImage","url","api_path","dispatch","post","then","res","data","items","catch","state","action","console","log"],"mappings":"AAAA,OAASA,eAAT,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CACA,GAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CACA,GAAMC,CAAAA,eAAe,CAAG,iBAAxB,CAEA,MAAO,SAASC,CAAAA,eAAT,CAAyBC,IAAzB,CAA+B,CACpC,MAAO,CACLC,IAAI,CAAEL,iBADD,CAELM,OAAO,CAAEF,IAFJ,CAAP,CAID,CAED,MAAO,SAASG,CAAAA,eAAT,CAAyBC,SAAzB,CAAoC,CACzC,MAAO,CACLH,IAAI,CAAEJ,iBADD,CAELO,SAAS,CAATA,SAFK,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBL,IAAvB,CAA6B,CAClC,MAAO,CACLC,IAAI,CAAEH,eADD,CAELQ,KAAK,CAAEN,IAFF,CAAP,CAID,CAED,MAAO,SAASO,CAAAA,QAAT,CAAkBC,GAAlB,CAAuB,CAC5B,GAAMC,CAAAA,QAAQ,gBAAd,CAEA,MAAO,UAACC,QAAD,CAAc,CACnBA,QAAQ,CAACX,eAAe,CAAC,IAAD,CAAhB,CAAR,CACAJ,KAAK,CAACgB,IAAN,CAAWF,QAAX,EACCG,IADD,CACM,SAAAC,GAAG,CAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAX,CACD,CAHD,EAICF,IAJD,CAIM,SAACE,IAAD,CAAU,CACdJ,QAAQ,CAACP,eAAe,CAACW,IAAI,CAACC,KAAN,CAAhB,CAAR,CACAL,QAAQ,CAACX,eAAe,CAAC,KAAD,CAAhB,CAAR,CACD,CAPD,EAQCiB,KARD,CAQO,iBAAMN,CAAAA,QAAQ,CAACL,aAAa,CAAC,IAAD,CAAd,CAAd,EARP,EASD,CAXD,CAYD,CAED,MAAO,SAASC,CAAAA,KAAT,EAAsC,IAAvBW,CAAAA,KAAuB,2DAAf,KAAe,IAARC,CAAAA,MAAQ,2CAC3C,OAAQA,MAAM,CAACjB,IAAf,EACE,IAAKH,CAAAA,eAAL,CACE,MAAOoB,CAAAA,MAAM,CAACZ,KAAd,CACF,QACE,MAAOW,CAAAA,KAAP,CAJJ,CAMD,CAED,MAAO,SAASf,CAAAA,OAAT,EAAwC,IAAvBe,CAAAA,KAAuB,2DAAf,KAAe,IAARC,CAAAA,MAAQ,2CAC7C,OAAQA,MAAM,CAACjB,IAAf,EACE,IAAKL,CAAAA,iBAAL,CACE,MAAOsB,CAAAA,MAAM,CAAChB,OAAd,CACF,QACE,MAAOe,CAAAA,KAAP,CAJJ,CAMD,CAED,MAAO,SAASb,CAAAA,SAAT,EAAuC,IAApBa,CAAAA,KAAoB,2DAAZ,EAAY,IAARC,CAAAA,MAAQ,2CAC5CC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAmBC,MAAnB,EACA,OAAQA,MAAM,CAACjB,IAAf,EACE,IAAKJ,CAAAA,iBAAL,CACE,MAAOqB,CAAAA,MAAM,CAACd,SAAd,CACF,QACE,MAAOa,CAAAA,KAAP,CAJJ,CAMD,CAED,cAAevB,CAAAA,eAAe,CAAC,CAC7BQ,OAAO,CAAPA,OAD6B,CAE7BE,SAAS,CAATA,SAF6B,CAG7BE,KAAK,CAALA,KAH6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport axios from 'axios'\n\nconst GET_IMAGE_LOADING = 'GET_IMAGE_LOADING';\nconst GET_IMAGE_SUCCESS = 'GET_IMAGE_SUCCESS';\nconst GET_IMAGE_ERROR = 'GET_IMAGE_ERROR';\n\nexport function getImageLoading(bool) {\n  return {\n    type: GET_IMAGE_LOADING,\n    loading: bool\n  };\n}\n\nexport function getImageSuccess(imageData) {\n  return {\n    type: GET_IMAGE_SUCCESS,\n    imageData\n  };\n}\n\nexport function getImageError(bool) {\n  return {\n    type: GET_IMAGE_ERROR,\n    error: bool\n  };\n}\n\nexport function getImage(url) {\n  const api_path = `/api/getImage`\n\n  return (dispatch) => {\n    dispatch(getImageLoading(true));\n    axios.post(api_path)\n    .then(res => {\n      return res.data;\n    })\n    .then((data) => {\n      dispatch(getImageSuccess(data.items))\n      dispatch(getImageLoading(false));\n    })\n    .catch(() => dispatch(getImageError(true)));\n  };\n}\n\nexport function error(state = false, action) {\n  switch (action.type) {\n    case GET_IMAGE_ERROR:\n      return action.error;\n    default:\n      return state;\n  }\n}\n\nexport function loading(state = false, action) {\n  switch (action.type) {\n    case GET_IMAGE_LOADING:\n      return action.loading;\n    default:\n      return state;\n  }\n}\n\nexport function imageData(state = [], action) {\n  console.log(state, action)\n  switch (action.type) {\n    case GET_IMAGE_SUCCESS:\n      return action.imageData;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  loading,\n  imageData,\n  error,\n});\n"]},"metadata":{},"sourceType":"module"}