{"ast":null,"code":"var _jsxFileName = \"/home/rangga/Downloads/aia/frontend/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getImage } from './store/reducers';\nimport './css/App.css';\n\nclass App extends Component {\n  componentWillMount() {\n    this.props.getFlickrImage();\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      loading,\n      error,\n      cards\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Flickr Images\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content flexWrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, loading ? 'Loading...' : error ? 'OOPS!!! There was an error connection' : cards)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    error: state.error,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFlickrImage: url => dispatch(getImage(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/rangga/Downloads/aia/frontend/src/components/App.js"],"names":["React","Component","connect","getImage","App","componentWillMount","props","getFlickrImage","render","console","log","loading","error","cards","mapStateToProps","state","mapDispatchToProps","dispatch","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,eAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWC,cAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,UAAM;AAAEK,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKP,KAAvC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,eAME;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,OAAO,GAAG,YAAH,GAAkBC,KAAK,GAAG,uCAAH,GAA6CC,KAD9E,CANF,CADF,CADF;AAcD;;AAxByB;;AA2B5B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF,KADR;AAELD,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAFR;AAGLD,IAAAA,OAAO,EAAEI,KAAK,CAACJ;AAHV,GAAP;AAKD,CAND;;AAQA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLV,IAAAA,cAAc,EAAGW,GAAD,IAASD,QAAQ,CAACd,QAAQ,CAACe,GAAD,CAAT;AAD5B,GAAP;AAGD,CAJD;;AAMA,eAAehB,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getImage } from './store/reducers';\n\nimport './css/App.css';\n\nclass App extends Component {\n\n  componentWillMount() {\n    this.props.getFlickrImage();\n  }\n\n  render() {\n    console.log(this.props);\n    const { loading, error, cards } = this.props;\n\n    return (\n      <div className=\"App\">\n        <div>\n          <div className=\"header\">\n            <h2>\n                Flickr Images\n            </h2>\n          </div>\n          <div className=\"content flexWrap\">\n            {loading ? 'Loading...' : error ? 'OOPS!!! There was an error connection' : cards}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cards: state.cards,\n    error: state.error,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFlickrImage: (url) => dispatch(getImage(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}