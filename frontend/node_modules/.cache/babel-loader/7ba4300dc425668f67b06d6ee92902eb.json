{"ast":null,"code":"var _jsxFileName = \"/home/rangga/Downloads/aia/frontend/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getImage } from './store/reducers';\nimport Card from './Card';\nimport './css/App.css';\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.searchHandleChange = e => {\n      const value = e.target.value;\n\n      if (value.length >= 3) {\n        this.setState({\n          addressSearchvalue: value\n        });\n      } else {\n        this.setState({\n          addressSearchvalue: ''\n        });\n      }\n    };\n\n    this.searchHandleClick = e => {\n      e.preventDefault();\n      console.log('Value: ', this.state.addressSearchvalue);\n    };\n\n    this.state = {\n      addressSearchvalue: ''\n    };\n  }\n\n  componentWillMount() {\n    this.props.getFlickrImage();\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      cards\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this.searchHandleChange,\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"search_button\",\n      onClick: this.searchHandleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content flexWrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, loading ? 'Loading...' : error ? 'OOPS!!! There was an error connection' : imageData.map((card, index) => /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      author: card.author,\n      title: card.title,\n      description: card.description,\n      image: card.media.m,\n      tags: card.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nApp.propTypes = {\n  getFlickrImage: PropTypes.func.isRequired,\n  imageData: PropTypes.array,\n  loading: PropTypes.bool,\n  error: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  console.log('STATE: ', state);\n  return {\n    imageData: state.imageData,\n    error: state.error,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFlickrImage: url => dispatch(getImage(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/rangga/Downloads/aia/frontend/src/components/App.js"],"names":["React","Component","connect","PropTypes","getImage","Card","App","constructor","props","context","searchHandleChange","e","value","target","length","setState","addressSearchvalue","searchHandleClick","preventDefault","console","log","state","componentWillMount","getFlickrImage","render","loading","error","cards","imageData","map","card","index","author","title","description","media","m","tags","propTypes","func","isRequired","array","bool","mapStateToProps","mapDispatchToProps","dispatch","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,eAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;;AAD0B,SAkB5BC,kBAlB4B,GAkBPC,CAAC,IAAI;AACxB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AACA,UAAGA,KAAK,CAACE,MAAN,IAAgB,CAAnB,EAAsB;AACpB,aAAKC,QAAL,CAAc;AAAEC,UAAAA,kBAAkB,EAAEJ;AAAtB,SAAd;AACD,OAFD,MAEO;AACL,aAAKG,QAAL,CAAc;AAAEC,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACD;AACF,KAzB2B;;AAAA,SA2B5BC,iBA3B4B,GA2BRN,CAAC,IAAI;AACvBA,MAAAA,CAAC,CAACO,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKC,KAAL,CAAWL,kBAAlC;AACD,KA9B2B;;AAE1B,SAAKK,KAAL,GAAa;AACXL,MAAAA,kBAAkB,EAAE;AADT,KAAb;AAGD;;AASDM,EAAAA,kBAAkB,GAAG;AACnB,SAAKd,KAAL,CAAWe,cAAX;AACD;;AAgBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKnB,KAAvC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,QAFd;AAGE,MAAA,QAAQ,EAAE,KAAKE,kBAHjB;AAIE,MAAA,SAAS,EAAC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,KAAKO,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,OAAO,GAAG,YAAH,GAAkBC,KAAK,GAAG,uCAAH,GAC7BE,SAAS,CAACC,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACZ,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,MAAM,EAAED,IAAI,CAACE,MAFf;AAGE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,MAAA,WAAW,EAAEH,IAAI,CAACI,WAJpB;AAKE,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAAL,CAAWC,CALpB;AAME,MAAA,IAAI,EAAEN,IAAI,CAACO,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CAVF,CADF,CADF;AA8BD;;AAlEyB;;AAAtB/B,G,CAQGgC,S,GAAY;AACjBf,EAAAA,cAAc,EAAEpB,SAAS,CAACoC,IAAV,CAAeC,UADd;AAEjBZ,EAAAA,SAAS,EAAEzB,SAAS,CAACsC,KAFJ;AAGjBhB,EAAAA,OAAO,EAAEtB,SAAS,CAACuC,IAHF;AAIjBhB,EAAAA,KAAK,EAAEvB,SAAS,CAACuC;AAJA,C;;AA6DrB,MAAMC,eAAe,GAAItB,KAAD,IAAW;AACjCF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACA,SAAO;AACLO,IAAAA,SAAS,EAAEP,KAAK,CAACO,SADZ;AAELF,IAAAA,KAAK,EAAEL,KAAK,CAACK,KAFR;AAGLD,IAAAA,OAAO,EAAEJ,KAAK,CAACI;AAHV,GAAP;AAKD,CAPD;;AASA,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLtB,IAAAA,cAAc,EAAGuB,GAAD,IAASD,QAAQ,CAACzC,QAAQ,CAAC0C,GAAD,CAAT;AAD5B,GAAP;AAGD,CAJD;;AAMA,eAAe5C,OAAO,CAACyC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CtC,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\n\nimport { getImage } from './store/reducers';\n\nimport Card from './Card'\nimport './css/App.css';\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      addressSearchvalue: '',\n    }\n  }\n\n  static propTypes = {\n    getFlickrImage: PropTypes.func.isRequired,\n    imageData: PropTypes.array,\n    loading: PropTypes.bool,\n    error: PropTypes.bool,\n  }\n\n  componentWillMount() {\n    this.props.getFlickrImage();\n  }\n\n  searchHandleChange = e => {\n    const value = e.target.value\n    if(value.length >= 3) {\n      this.setState({ addressSearchvalue: value })\n    } else {\n      this.setState({ addressSearchvalue: '' })\n    }\n  }\n\n  searchHandleClick = e => {\n    e.preventDefault()\n    console.log('Value: ', this.state.addressSearchvalue)\n  }\n\n  render() {\n    const { loading, error, cards } = this.props;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <div className=\"header\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={this.searchHandleChange}\n              className=\"search\"\n            />\n            <button className=\"search_button\" onClick={this.searchHandleClick}>Search</button>\n          </div>\n          <div className=\"content flexWrap\">\n            {loading ? 'Loading...' : error ? 'OOPS!!! There was an error connection' : (\n              imageData.map((card, index) => (\n                <Card\n                  key={index}\n                  author={card.author}\n                  title={card.title}\n                  description={card.description}\n                  image={card.media.m}\n                  tags={card.tags}\n                />\n              ))\n\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('STATE: ', state)\n  return {\n    imageData: state.imageData,\n    error: state.error,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFlickrImage: (url) => dispatch(getImage(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}