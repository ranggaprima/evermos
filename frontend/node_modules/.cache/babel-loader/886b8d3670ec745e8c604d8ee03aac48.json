{"ast":null,"code":"var _jsxFileName = \"/home/rangga/Downloads/aia/frontend/src/components/store/reducers.js\";\nimport React from 'react';\nimport { combineReducers } from 'redux';\nimport axios from 'axios';\nimport Card from '../Card';\nconst GET_IMAGE_LOADING = 'GET_IMAGE_LOADING';\nconst GET_IMAGE_SUCCESS = 'GET_IMAGE_SUCCESS';\nconst GET_IMAGE_ERROR = 'GET_IMAGE_ERROR';\nexport function getImageLoading(bool) {\n  return {\n    type: GET_IMAGE_LOADING,\n    loading: bool\n  };\n}\nexport function getImageSuccess(cards) {\n  return {\n    type: GET_IMAGE_SUCCESS,\n    cards\n  };\n}\nexport function getImageError(bool) {\n  return {\n    type: GET_IMAGE_ERROR,\n    error: bool\n  };\n}\nexport function getImage(url) {\n  const api_path = `http://localhost:5000/api/getImage`;\n  return dispatch => {\n    dispatch(getImageLoading(true));\n    axios.post(api_path).then(res => {\n      return res.data;\n    }).then(data => {\n      let cards = [];\n      cards = data.items.map((card, index) => /*#__PURE__*/React.createElement(Card, {\n        key: index,\n        author: card.author,\n        title: card.title,\n        description: card.description,\n        image: card.media.m,\n        tags: card.tags,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }));\n      dispatch(getImageSuccess(cards));\n      dispatch(getImageLoading(false));\n    }).catch(() => dispatch(getImageError(true)));\n  };\n}\nexport function error(state = false, action) {\n  switch (action.type) {\n    case GET_IMAGE_ERROR:\n      return action.error;\n\n    default:\n      return state;\n  }\n}\nexport function loading(state = false, action) {\n  switch (action.type) {\n    case GET_IMAGE_LOADING:\n      return action.loading;\n\n    default:\n      return state;\n  }\n}\nexport function cards(state = [], action) {\n  console.log(state, action);\n\n  switch (action.type) {\n    case GET_IMAGE_SUCCESS:\n      return action.cards;\n\n    default:\n      return state;\n  }\n}\nexport default combineReducers({\n  loading,\n  cards,\n  error\n});","map":{"version":3,"sources":["/home/rangga/Downloads/aia/frontend/src/components/store/reducers.js"],"names":["React","combineReducers","axios","Card","GET_IMAGE_LOADING","GET_IMAGE_SUCCESS","GET_IMAGE_ERROR","getImageLoading","bool","type","loading","getImageSuccess","cards","getImageError","error","getImage","url","api_path","dispatch","post","then","res","data","items","map","card","index","author","title","description","media","m","tags","catch","state","action","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { combineReducers } from 'redux';\nimport axios from 'axios'\n\nimport Card from '../Card';\n\n\nconst GET_IMAGE_LOADING = 'GET_IMAGE_LOADING';\nconst GET_IMAGE_SUCCESS = 'GET_IMAGE_SUCCESS';\nconst GET_IMAGE_ERROR = 'GET_IMAGE_ERROR';\n\nexport function getImageLoading(bool) {\n  return {\n    type: GET_IMAGE_LOADING,\n    loading: bool\n  };\n}\n\nexport function getImageSuccess(cards) {\n  return {\n    type: GET_IMAGE_SUCCESS,\n    cards\n  };\n}\n\nexport function getImageError(bool) {\n  return {\n    type: GET_IMAGE_ERROR,\n    error: bool\n  };\n}\n\nexport function getImage(url) {\n  const api_path = `http://localhost:5000/api/getImage`\n\n  return (dispatch) => {\n    dispatch(getImageLoading(true));\n    axios.post(api_path)\n    .then(res => {\n      return res.data;\n    })\n    .then((data) => {\n      let cards = [];\n      cards = data.items.map((card, index) => (\n        <Card\n          key={index}\n          author={card.author}\n          title={card.title}\n          description={card.description}\n          image={card.media.m}\n          tags={card.tags}\n        />\n      ))\n\n      dispatch(getImageSuccess(cards))\n      dispatch(getImageLoading(false));\n    })\n    .catch(() => dispatch(getImageError(true)));\n  };\n}\n\nexport function error(state = false, action) {\n  switch (action.type) {\n    case GET_IMAGE_ERROR:\n      return action.error;\n    default:\n      return state;\n  }\n}\n\nexport function loading(state = false, action) {\n  switch (action.type) {\n    case GET_IMAGE_LOADING:\n      return action.loading;\n    default:\n      return state;\n  }\n}\n\nexport function cards(state = [], action) {\n  console.log(state, action)\n  switch (action.type) {\n    case GET_IMAGE_SUCCESS:\n      return action.cards;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  loading,\n  cards,\n  error,\n});\n"]},"metadata":{},"sourceType":"module"}